library("dplyr")
library("ggplot2")
library("Pupilla")
wd= "I:\\Il mio Drive\\00 backup drive padova\\pupil NRS\\DotProbeTask\\02 PV\\02 data"
subject= 1:51
#groups
group= c("NS", "S", "NS", "NS", "S","S", "NS", "S",
"S", "S", "S", "S", "S", "S", "NS", "S",
"NS", "S", "NS", "S", "NS", "NS", "S", "NS",
"S", "NS", "NS", "NS", "NS", "NS", "NS", "S",
"S", "S", "S", "NS", "NS", "NS", "NS", "S",
"NS", "NS", "NS", "S", "S", "S", "S", "S",
"S", "S", "S")
data= read_TOBII(subject, wd)
wd= "I:\\Il mio Drive\\00 backup drive padova\\pupil NRS\\DotProbeTask\\02 PV\\02 data"
#set your own working directory first!
#wd= choose.dir()
subject= 1:51 #vector of ids
#groups- whether ids are smokers or not;
#this I didn't know beforehand so I have to add manually this var
group= c("NS", "S", "NS", "NS", "S","S", "NS", "S",
"S", "S", "S", "S", "S", "S", "NS", "S",
"NS", "S", "NS", "S", "NS", "NS", "S", "NS",
"S", "NS", "NS", "NS", "NS", "NS", "NS", "S",
"S", "S", "S", "NS", "NS", "NS", "NS", "S",
"NS", "NS", "NS", "S", "S", "S", "S", "S",
"S", "S", "S")
#read all the files
data= read_TOBII(subject, wd)
#split for eyetracker and behavioral data
ET= data$ET
BD= data$BD
ET$Event= ifelse(ET$Event== "", NA, ET$Event)
ET= tidyr::fill(ET, Event, .direction = "down")
ET= ET %>%
group_by(p_ID) %>%
mutate(Trial= detect_change(Event, key= "scrambled"))
table(ET$Trial)
length(table(ET$Trial)
)
length(unique(ET$Trial))
length(unique(ET$Trial))
length(unique(BD$Trial))
ET= ET[ET$Trial>=0,]
length(unique(ET$Trial))
#whether it's practice or experiment
ET$Phase= copy_variable("Phase")
#discard practice
ET= ET[ET$Phase== "experiment",]
BD= BD[BD$Phase== "experiment",]
ET$Trial= copy_variable("Trial")
range(ET$Trial)
range(BD$Trial)
ET$Condition= copy_variable("Condition")
ET$Cue= copy_variable("Cue")
ET$Accuracy= copy_variable("Accuracy")
ET$Image= copy_variable("Image")
ET$RT = as.numeric(copy_variable("RT"))
ET$Pupil= consolidate_signal(ET$PupilSizeLeft, ET$PupilSizeRight,
ET$PupilValidityLeft, ET$PupilValidityRight,
strategy = "conservative",
plausible= c(2, 7))
ET= ET[ET$Event %in% c("scrambled", "target"),]
ET= ET[ET$Event %in% c("scrambled", "target"),]
range(ET$Time)
head(ET$TimeStamp)
head(ET$TimeStamp)
ET= ET %>%
group_by(p_ID, Trial) %>%
mutate(Time= c(0,
cumsum(diff(TimeStamp))))
head(ET$Time)
range(ET$Time)
range(ET$Time)
ET= ET %>%
group_by(p_ID, Trial) %>%
mutate(Anomaly= ifelse(max(Time)>4500, 1, 0))
sum(table(ET$p_ID[ET$Anomaly== 1],
ET$Trial[ET$Anomaly== 1]))
(table(ET$p_ID[ET$Anomaly== 1],
ET$Trial[ET$Anomaly== 1])) #for 2 participants,
ET= ET[ET$Anomaly== 0,]
ET= ET %>%
group_by(p_ID, Trial) %>%
mutate(Time= Time - Time[Event== "target"][1])
summary(ET$Time)
sum(ET$Time >-1000 & ET$Time<3000)/nrow(ET)
ET= ET[ET$Time >-1000 & ET$Time<3000,]
pp_options("spar"= 0.8)
#entire preprocessing
ET= ET %>%
group_by(p_ID, Trial) %>%
mutate(Pupil_pp= pre_process(Pupil, Time))
ET %>% filter(p_ID==12 & Trial== 102) %>%
check_series("Pupil", "Pupil_pp", "Time")
?smooth.spline
#drop
ET= ET %>% filter(!is.na(Pupil_pp))
ET$Time= downsample_time(ET$Time, 25)
ET= ET %>%
group_by(p_ID, Group, Condition, Image, Trial, Time) %>%
summarise(Pupil= median(Pupil_pp, na.rm = T))
ET$Group= group[ET$p_ID]
ET= ET %>% filter(!p_ID %in% c(2, 9, 10, 13, 25, 29, 30, 34, 38, 48, 49))
#assign group
ET$Group= group[ET$p_ID]
gc()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
options(width = 999)
Sys.setenv(LANG = "en")
# Chunk 3
library("Pupilla")
library("dplyr")
library("ggplot2")
# Chunk 4
wd= "I:\\Il mio Drive\\00 backup drive padova\\pupil NRS\\DotProbeTask\\02 PV\\02 data"
# Chunk 5
#set your own working directory first!
#wd= choose.dir()
subject= 1:51 #vector of ids
#groups- whether ids are smokers or not;
#this I didn't know beforehand so I have to add manually this var
group= c("NS", "S", "NS", "NS", "S","S", "NS", "S",
"S", "S", "S", "S", "S", "S", "NS", "S",
"NS", "S", "NS", "S", "NS", "NS", "S", "NS",
"S", "NS", "NS", "NS", "NS", "NS", "NS", "S",
"S", "S", "S", "NS", "NS", "NS", "NS", "S",
"NS", "NS", "NS", "S", "S", "S", "S", "S",
"S", "S", "S")
#read all the files
data= read_TOBII(subject, wd)
#split for eyetracker and behavioral data
ET= data$ET
BD= data$BD
# Chunk 6
ET$Event= ifelse(ET$Event== "", NA, ET$Event)
ET= tidyr::fill(ET, Event, .direction = "down")
# Chunk 7
ET= ET %>%
group_by(p_ID) %>%
mutate(Trial= detect_change(Event,
key= "scrambled"))
# Chunk 8
ET= ET[ET$Trial>=0,]
# Chunk 9
#whether it's practice or experiment
ET$Phase= copy_variable("Phase")
#discard practice
ET= ET[ET$Phase== "experiment",]
BD= BD[BD$Phase== "experiment",]
# Chunk 10
ET$Trial= copy_variable("Trial")
range(ET$Trial)
range(BD$Trial)
# Chunk 11
ET$Condition= copy_variable("Condition")
ET$Cue= copy_variable("Cue")
ET$Accuracy= copy_variable("Accuracy")
ET$Image= copy_variable("Image")
ET$RT = as.numeric(copy_variable("RT"))
# Chunk 12
ET$Pupil= consolidate_signal(ET$PupilSizeLeft, ET$PupilSizeRight,
ET$PupilValidityLeft, ET$PupilValidityRight,
strategy = "conservative",
plausible= c(2, 7))
# Chunk 13
ET= ET[ET$Event %in% c("scrambled", "target"),]
# Chunk 14
head(ET$TimeStamp)
ET= ET %>%
group_by(p_ID, Trial) %>%
mutate(Time= c(0,
cumsum(diff(TimeStamp))))
head(ET$Time)
# Chunk 15
range(ET$Time)
ET= ET %>%
group_by(p_ID, Trial) %>%
mutate(Anomaly= ifelse(max(Time)>4500, 1, 0))
(table(ET$p_ID[ET$Anomaly== 1],
ET$Trial[ET$Anomaly== 1])) #for 1 participant, the trial around the break...
ET= ET[ET$Anomaly== 0,]
# Chunk 16
ET= ET %>%
group_by(p_ID, Trial) %>%
mutate(Time= Time - Time[Event== "target"][1])
ET= ET[ET$Time >-1000 & ET$Time<3000,]
ET= ET %>% filter(!p_ID %in% c(2, 9, 10, 13, 25, 29, 30, 34, 38, 48, 49))
#assign group
ET$Group= group[ET$p_ID]
ET= ET %>%
group_by(Subject) %>%
mutate(Pupil= (Pupil-mean(na.omit(Pupil)))/sd(na.omit(Pupil)))
ET$Subject
colnames(ET)
ET$Time= downsample_time(ET$Time, 25)
ET= ET %>%
group_by(Subject, Group, Condition, Image, Trial, Time) %>%
summarise(Pupil= median(Pupil_pp, na.rm = T))
ET$p_ID
gc()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
options(width = 999)
Sys.setenv(LANG = "en")
# Chunk 3
library("Pupilla")
library("dplyr")
library("ggplot2")
# Chunk 4
wd= "I:\\Il mio Drive\\00 backup drive padova\\pupil NRS\\DotProbeTask\\02 PV\\02 data"
# Chunk 5
#set your own working directory first!
#wd= choose.dir()
subject= 1:51 #vector of ids
#groups- whether ids are smokers or not;
#this I didn't know beforehand so I have to add manually this var
group= c("NS", "S", "NS", "NS", "S","S", "NS", "S",
"S", "S", "S", "S", "S", "S", "NS", "S",
"NS", "S", "NS", "S", "NS", "NS", "S", "NS",
"S", "NS", "NS", "NS", "NS", "NS", "NS", "S",
"S", "S", "S", "NS", "NS", "NS", "NS", "S",
"NS", "NS", "NS", "S", "S", "S", "S", "S",
"S", "S", "S")
#read all the files
data= read_TOBII(subject, wd)
#split for eyetracker and behavioral data
ET= data$ET
BD= data$BD
# Chunk 6
ET$Event= ifelse(ET$Event== "", NA, ET$Event)
ET= tidyr::fill(ET, Event, .direction = "down")
# Chunk 7
ET= ET %>%
group_by(p_ID) %>%
mutate(Trial= detect_change(Event,
key= "scrambled"))
# Chunk 8
ET= ET[ET$Trial>=0,]
# Chunk 9
#whether it's practice or experiment
ET$Phase= copy_variable("Phase")
#discard practice
ET= ET[ET$Phase== "experiment",]
BD= BD[BD$Phase== "experiment",]
# Chunk 10
ET$Trial= copy_variable("Trial")
range(ET$Trial)
range(BD$Trial)
# Chunk 11
ET$Condition= copy_variable("Condition")
ET$Cue= copy_variable("Cue")
ET$Accuracy= copy_variable("Accuracy")
ET$Image= copy_variable("Image")
ET$RT = as.numeric(copy_variable("RT"))
# Chunk 12
ET$Pupil= consolidate_signal(ET$PupilSizeLeft, ET$PupilSizeRight,
ET$PupilValidityLeft, ET$PupilValidityRight,
strategy = "conservative",
plausible= c(2, 7))
# Chunk 13
ET= ET[ET$Event %in% c("scrambled", "target"),]
# Chunk 14
head(ET$TimeStamp)
ET= ET %>%
group_by(p_ID, Trial) %>%
mutate(Time= c(0,
cumsum(diff(TimeStamp))))
head(ET$Time)
# Chunk 15
range(ET$Time)
ET= ET %>%
group_by(p_ID, Trial) %>%
mutate(Anomaly= ifelse(max(Time)>4500, 1, 0))
(table(ET$p_ID[ET$Anomaly== 1],
ET$Trial[ET$Anomaly== 1])) #for 1 participant, the trial around the break...
ET= ET[ET$Anomaly== 0,]
# Chunk 16
ET= ET %>%
group_by(p_ID, Trial) %>%
mutate(Time= Time - Time[Event== "target"][1])
ET= ET[ET$Time >-1000 & ET$Time<3000,]
# Chunk 17
ET= ET %>% filter(!p_ID %in% c(2, 9, 10, 13, 25, 29, 30, 34, 38, 48, 49))
#assign group
ET$Group= group[ET$p_ID]
# Chunk 18
#this changes the width of the window for smoothing
pp_options("spar"= 0.8)
#entire preprocessing
ET= ET %>%
group_by(p_ID, Trial) %>%
mutate(Pupil_pp= pre_process(Pupil, Time))
# Chunk 19
ET %>% filter(p_ID==12 & Trial== 102) %>%
check_series("Pupil", "Pupil_pp", "Time")
# Chunk 20
#drop
ET= ET %>% filter(!is.na(Pupil_pp))
# Chunk 21
ET$Time= downsample_time(ET$Time, 25)
ET= ET %>%
group_by(Subject, Group, Condition, Image, Trial, Time) %>%
summarise(Pupil= median(Pupil_pp, na.rm = T))
ET$Group
ET$Time= downsample_time(ET$Time, 25)
ET= ET %>%
group_by(Subject, Group, Condition, Trial, Time) %>%
summarise(Pupil= median(Pupil_pp, na.rm = T))
gc()
gc()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
options(width = 999)
Sys.setenv(LANG = "en")
# Chunk 3
library("Pupilla")
library("dplyr")
library("ggplot2")
# Chunk 4
wd= "I:\\Il mio Drive\\00 backup drive padova\\pupil NRS\\DotProbeTask\\02 PV\\02 data"
# Chunk 5
#set your own working directory first!
#wd= choose.dir()
subject= 1:51 #vector of ids
#groups- whether ids are smokers or not;
#this I didn't know beforehand so I have to add manually this var
group= c("NS", "S", "NS", "NS", "S","S", "NS", "S",
"S", "S", "S", "S", "S", "S", "NS", "S",
"NS", "S", "NS", "S", "NS", "NS", "S", "NS",
"S", "NS", "NS", "NS", "NS", "NS", "NS", "S",
"S", "S", "S", "NS", "NS", "NS", "NS", "S",
"NS", "NS", "NS", "S", "S", "S", "S", "S",
"S", "S", "S")
#read all the files
data= read_TOBII(subject, wd)
#split for eyetracker and behavioral data
ET= data$ET
BD= data$BD
# Chunk 6
ET$Event= ifelse(ET$Event== "", NA, ET$Event)
ET= tidyr::fill(ET, Event, .direction = "down")
# Chunk 7
ET$Subject= ET$p_ID
ET= ET %>%
group_by(Subject) %>%
mutate(Trial= detect_change(Event,
key= "scrambled"))
# Chunk 8
ET= ET[ET$Trial>=0,]
# Chunk 9
#whether it's practice or experiment
ET$Phase= copy_variable("Phase")
#discard practice
ET= ET[ET$Phase== "experiment",]
BD= BD[BD$Phase== "experiment",]
# Chunk 10
ET$Trial= copy_variable("Trial")
range(ET$Trial)
range(BD$Trial)
# Chunk 11
ET$Condition= copy_variable("Condition")
ET$Cue= copy_variable("Cue")
ET$Accuracy= copy_variable("Accuracy")
ET$Image= copy_variable("Image")
ET$RT = as.numeric(copy_variable("RT"))
# Chunk 12
ET$Pupil= consolidate_signal(ET$PupilSizeLeft, ET$PupilSizeRight,
ET$PupilValidityLeft, ET$PupilValidityRight,
strategy = "conservative",
plausible= c(2, 7))
# Chunk 13
ET= ET[ET$Event %in% c("scrambled", "target"),]
# Chunk 14
head(ET$TimeStamp)
ET= ET %>%
group_by(Subject, Trial) %>%
mutate(Time= c(0,
cumsum(diff(TimeStamp))))
head(ET$Time)
# Chunk 15
range(ET$Time)
ET= ET %>%
group_by(Subject, Trial) %>%
mutate(Anomaly= ifelse(max(Time)>4500, 1, 0))
(table(ET$p_ID[ET$Anomaly== 1],
ET$Trial[ET$Anomaly== 1])) #for 1 participant, the trial around the break...
ET= ET[ET$Anomaly== 0,]
# Chunk 16
ET= ET %>%
group_by(Subject, Trial) %>%
mutate(Time= Time - Time[Event== "target"][1])
ET= ET[ET$Time >-1000 & ET$Time<3000,]
# Chunk 17
ET= ET %>% filter(!Subject %in% c(2, 9, 10, 13, 25, 29, 30, 34, 38, 48, 49))
#assign group
ET$Group= group[ET$Subject]
# Chunk 18
#this changes the width of the window for smoothing
pp_options("spar"= 0.8)
#entire preprocessing
ET= ET %>%
group_by(Subject, Trial) %>%
mutate(Pupil_pp= pre_process(Pupil, Time))
# Chunk 19
ET %>% filter(Subject==12 & Trial== 102) %>%
check_series("Pupil", "Pupil_pp", "Time")
# Chunk 20
#drop
ET= ET %>% filter(!is.na(Pupil_pp))
ET %>% filter(Subject==12 & Trial== 103) %>%
check_series("Pupil", "Pupil_pp", "Time")
ET %>% filter(Subject==12 & Trial== 104) %>%
check_series("Pupil", "Pupil_pp", "Time")
ET$Time= downsample_time(ET$Time, 25)
ET= ET %>%
group_by(Subject, Group, Condition, Trial, Time) %>%
summarise(Pupil= median(Pupil_pp, na.rm = T))
ET= ET %>%
group_by(Subject) %>%
mutate(Pupil= (Pupil-mean(na.omit(Pupil)))/sd(na.omit(Pupil)))
ET= ET %>%
group_by(Subject, Trial) %>%
mutate(Pupil= Pupil - Pupil[Time== 0][1])
ET$Subject= as.factor(ET$Subject)
ET$Condition= ifelse(ET$Condition== "A",
"Nicotine-related",
"Control")
ET$Group= ifelse(ET$Group== "S",
"Smokers",
"Non smokers")
pupil= ET %>%
group_by(Subject, Group, Time, Condition) %>%
summarise(Pupil= mean(Pupil, na.rm=T))
pupil_group= pupil %>%
group_by(Group, Time, Condition) %>%
summarise(Pupil= mean(Pupil, na.rm=T))
commonTheme= list(theme_bw(),
theme(text= element_text(size= 16,
face="bold")),
geom_hline(yintercept = 0, color= "black"),
geom_vline(xintercept = 0, color= "black"),
xlab("Time (ms)"),
ylab("Pupil dilation (z scores)"))
p1=
pupil_group %>%
#filter(Time>=0) %>%
ggplot(aes(x= Time, y= Pupil,
color= Group, linetype= Condition)) +
commonTheme +
geom_line(size= 1)
p1
pupil_diff= ET %>%
group_by(Subject, Group, Time, Condition) %>%
summarise(Pupil= mean(Pupil, na.rm= T)) %>%
group_by(Subject, Group, Time) %>%
summarise(Pupil= Pupil[Condition== "Nicotine-related"] - Pupil[Condition== "Control"])
pupil_diff_group= pupil_diff %>%
group_by(Group, Time) %>%
summarise(SEM= sd(Pupil)/sqrt(length(Pupil)),
N= length(Pupil),
Pupil= mean(Pupil)) %>%
mutate(ci.min= Pupil - 1.96 * SEM,
ci.max= Pupil + 1.96 * SEM)
p2= pupil_diff_group %>%
ggplot(aes(x= Time, y= Pupil, color= Group)) +
commonTheme +
geom_ribbon(aes(ymin= ci.min,
ymax= ci.max,
fill= Group),
alpha= 0.3, color= NA) +
geom_line(size= 1.2, show.legend = F) +
ylab("Pupil dilation by NRS") + guides(NULL)
p2
patchwork::plot_layout(p1 + p2)
data= ET
dv= "Pupil"
time= "Time"
id= "Subject"
trial= "Trial"
add= c("Group", "Condition")
Ncomp= NULL
rf= reduce_PCA(data,
dv,
time,
id,
trial,
Ncomp= NULL,
scaling= F,
add)
rf$summaryPCA[, 1:5]
plot_loadings("PC1", rf)
install.packages(c("blogdown", "curl"))
install.packages(c("blogdown", "curl"))
require(devtools)
use_readme_rmd()
use_github_links()
gh_token_help()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
gh_token_help()
gitcreds::gh_token_help()
gitcreds::gitcreds_set()
use_github_links()
require(devtools)
gh_token_help()
create_github_token()
gitcreds::gitcreds_set()
library("pkgdown")
build_site()
